package com.nmh.commerce.coupon.mock

import com.nmh.commerce.coupon.CouponStock
import com.nmh.commerce.coupon.CouponStockRepository
import java.util.*

class FakeCouponStockRepository : CouponStockRepository {
    private val data: MutableList<CouponStock> = ArrayList<CouponStock>()
    private var autoGeneratedId = 0L

    override fun save(couponStock: CouponStock): CouponStock {
        if (couponStock.id == null || couponStock.id == 0L) {
            val newCouponStock = CouponStock(
                id = ++autoGeneratedId,
                couponId = couponStock.couponId,
                remainingQuantity = couponStock.remainingQuantity,
                version = couponStock.version
            )
            data.add(newCouponStock)
            return newCouponStock
        } else {
            data.removeIf { it: CouponStock? -> it!!.id == couponStock.id }
            data.add(couponStock)
            return couponStock
        }
    }

    override fun findByCouponId(couponId: Long): CouponStock {
        val optionalCouponStock = data.stream()
            .filter { it: CouponStock -> it.couponId == couponId }
            .findAny()
        return optionalCouponStock.orElseThrow { NoSuchElementException("쿠폰 재고가 없습니다.") }
    }

    override fun update(couponStock: CouponStock): CouponStock {
        data.removeIf { it: CouponStock? -> it!!.id == couponStock.id }
        data.add(couponStock)
        return couponStock
    }
}
